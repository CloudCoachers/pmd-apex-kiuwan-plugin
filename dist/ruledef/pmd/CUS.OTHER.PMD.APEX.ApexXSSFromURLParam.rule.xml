<?xml version="1.0" encoding="UTF-8"?>

<rule-definition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.optimyth.com/schema/definitions/rule" version="1.0">
	<rule id="CUS.OTHER.PMD.APEX.ApexXSSFromURLParam">
		<java-class>com.als.core.NullRule</java-class>
		<java-version>1.8</java-version>
		<tags>apex</tags>
		<reference><![CDATA[https://pmd.github.io/pmd/pmd_rules_apex_security.html#apexxssfromurlparam]]></reference>

		<parameters/>
		<code-examples>
			<code-example id="codeExample">
				<ko><![CDATA[

public without sharing class Foo {
    String unescapedstring = ApexPage.getCurrentPage().getParameters.get('url_param');
    String usedLater = unescapedstring;
}

        ]]></ko>
				<ok><![CDATA[]]></ok>
			</code-example>
		</code-examples>
    
    	<incompatibilities />
		<related-rules />

		<criteria-values>
			<criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OTHER" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.PRIORITY.MEDIUM" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.REPAIR_DIFFICULTY.LOW" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.ENGINE.OTHER" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.CQM.SECURITY" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.VULNERABILITY_TYPE.OTHER"/>
		</criteria-values>

		<i18ns>
			<i18n ref="OPT.LANGUAGE.ENGLISH">
				<name><![CDATA[Apex classes should escape/sanitize Strings obtained from URL parameters]]></name>
				<message><![CDATA[]]></message>
				<description><![CDATA[
Makes sure that all values obtained from URL parameters are properly escaped / sanitized
to avoid XSS attacks.
        ]]></description>
				<benefits><![CDATA[]]></benefits>
				<drawbacks><![CDATA[]]></drawbacks>
				<parameters/>
			</i18n>
		</i18ns>

	</rule>
</rule-definition>
