<?xml version="1.0" encoding="UTF-8"?>

<rule-definition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.optimyth.com/schema/definitions/rule" version="1.0">
	<rule id="CUS.OTHER.PMD.APEX.DebugsShouldUseLoggingLevel">
		<java-class>com.als.core.NullRule</java-class>
		<java-version>1.8</java-version>
		<tags>apex</tags>
		<reference><![CDATA[https://pmd.github.io/pmd/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel]]></reference>

		<parameters/>
		<code-examples>
			<code-example id="codeExample">
				<ko><![CDATA[
@isTest
public class Foo {
    @isTest
    static void bar() {
        System.debug('Hey this code executed.'); // not good
        System.debug(LoggingLevel.WARN, 'Hey, something might be wrong.'); // good
        System.debug(LoggingLevel.DEBUG, 'Hey, something happened.'); // not good when on strict mode
    }
}
        ]]></ko>
				<ok><![CDATA[]]></ok>
			</code-example>
		</code-examples>
    
    	<incompatibilities />
		<related-rules />

		<criteria-values>
			<criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OTHER" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.PRIORITY.MEDIUM" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.REPAIR_DIFFICULTY.LOW" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.ENGINE.OTHER" />
			<criterium-value ref="OPT.CRITERIUM_VALUE.CQM.MAINTAINABILITY" />
			
		</criteria-values>

		<i18ns>
			<i18n ref="OPT.LANGUAGE.ENGLISH">
				<name><![CDATA[Debugs Should Use Logging Level]]></name>
				<message><![CDATA[]]></message>
				<description><![CDATA[
The first parameter of System.debug, when using the signature with two parameters, is a LoggingLevel enum.
Having the Logging Level specified provides a cleaner log, and improves readability of it.
        ]]></description>
				<benefits><![CDATA[]]></benefits>
				<drawbacks><![CDATA[]]></drawbacks>
				<parameters/>
			</i18n>
		</i18ns>

	</rule>
</rule-definition>    